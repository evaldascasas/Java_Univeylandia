/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ManageDatabase;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author alumne
 */
public class Main extends javax.swing.JFrame {

    static final String DB_URL = "jdbc:mysql://univeylandia.cat:3306/univeylandia_test2";
    static final String DB_DRV = "com.mysql.jdbc.Driver";
    static final String DB_USER = "super";
    static final String DB_PASSWD = "Alumne123";

    Connection connection = null;
    Statement statement = null;
    ResultSet resultSet = null;

    /**
     * Creates new form Main
     */
    public Main() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setTitle("Univeylandia Database Management");
        this.setDefaultCloseOperation(EXIT_ON_CLOSE);
        this.pack();
        this.setExtendedState(this.MAXIMIZED_BOTH);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        sqlStatement = new javax.swing.JTextArea();
        connectionStatus = new javax.swing.JLabel();
        executeStatement = new javax.swing.JButton();
        clearWindow = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        sqlStatement.setColumns(20);
        sqlStatement.setRows(5);
        jScrollPane1.setViewportView(sqlStatement);

        connectionStatus.setText("No connectat");

        executeStatement.setText("Executar");
        executeStatement.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                executeStatementActionPerformed(evt);
            }
        });

        clearWindow.setText("Netejar");
        clearWindow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearWindowActionPerformed(evt);
            }
        });

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tabla.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(tabla);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(connectionStatus)
                .addGap(48, 48, 48))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(244, 244, 244)
                        .addComponent(executeStatement, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(86, 86, 86)
                        .addComponent(clearWindow, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1160, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1160, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(connectionStatus)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(executeStatement, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(clearWindow)))
                .addGap(12, 12, 12)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void executeStatementActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_executeStatementActionPerformed
        // TODO add your handling code here:
        try {

            ArrayList columnNames = new ArrayList();
            //ArrayList data = new ArrayList();

            connection = DriverManager.getConnection(DB_URL, DB_USER, DB_PASSWD);

            connectionStatus.setText("Connectat com: " + DB_USER);

            String query = sqlStatement.getText();

            statement = connection.createStatement();

            if (query.toLowerCase().contains("select")) {
                resultSet = statement.executeQuery(query);

                // obtenir metadades del resultat de la consulta
                ResultSetMetaData md = resultSet.getMetaData();

                // comptar el numero de columnes del resultat
                int columnCount = md.getColumnCount();

                // emmagatzemar el nom de les columnes en un ArrayList
                for (int i = 1; i <= columnCount; i++) {
                    //System.out.print(md.getColumnName(i)+"\t");
                    columnNames.add(md.getColumnName(i));
                }

                // Generar taula
                DefaultTableModel model = new DefaultTableModel();
                tabla.setModel(model);

                for (int i = 0; i < columnNames.size(); i++) {
                    model.addColumn(columnNames.get(i));
                }

                // mostrar les dades en la taula despres d'haver-les guardat en un Objecte[]
                while (resultSet.next()) {
                    Object[] row = new Object[columnCount];

                    for (int i = 0; i < columnCount; ++i) {
                        //row.add(resultSet.getObject(i));
                        row[i] = resultSet.getObject(i + 1);
                    }
                    //data.add(row);
                    model.addRow(row);
                }
                
                resultSet.close();

                /*// DEBUG - imprimir els ArrayList
            for (int i = 0; i < data.size(); i++) {
                System.out.print(columnNames.get(i));
                System.out.println(data.get(i));
            }*/
            } else {
                statement.executeUpdate(query);
            }

        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
            JOptionPane.showMessageDialog(this, ex);
        } finally {
            try {
                statement.close();
                connection.close();
            } catch (SQLException ex) {
                System.out.println(ex.getMessage());
                JOptionPane.showMessageDialog(this, ex);
            }
        }
    }//GEN-LAST:event_executeStatementActionPerformed

    private void clearWindowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearWindowActionPerformed
        // TODO add your handling code here:
        sqlStatement.setText(null);
    }//GEN-LAST:event_clearWindowActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>


        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton clearWindow;
    public javax.swing.JLabel connectionStatus;
    private javax.swing.JButton executeStatement;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea sqlStatement;
    private javax.swing.JTable tabla;
    // End of variables declaration//GEN-END:variables
}
